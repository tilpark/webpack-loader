<?php

namespace Tilpark\Webpack;


/**
 * Class Loader
 *
 * Webpack loader consumes the output generated by webpack-bundle-tracker and lets you use the generated bundles in php.
 *
 * @package Webpack Loader
 * @since   1.2.1
 */
class Loader {

  /**
   * Path to Bundle Tracker output
   *
   * @const string
   */
  const STATS = 'assets/webpack-stats.json';

  /**
   * status of bundle tracker
   *
   * @var status
   */
  private $status = "";

  /**
   * hashed file names
   *
   * @var array
   */
  private $chunks = [];

  /**
   * Project dir
   *
   * @var string
   */
  private $projectDir = "";


  /**
   * Absolute path of project
   *
   * @var string;
   */
  private $publicPath = "";

  /**
   * Constructor
   *
   */
  public function __construct(string $projectDir) {
    $this->projectDir = $projectDir . "/";

    $data = $this->getData();


    $this->status = $data->status;
    $this->chunks = $data->chunks;
    $this->publicPath = $data->publicPath;
  }


  /**
   * set Public Path bundle
   *
   * @return void
   */
  public function setPublicPath(string $publicPath) {
    $this->publicPath = $publicPath;
  }


  /**
   * get data in webpack statas file
   *
   * @return array
   */
  private function getData() {
    $file = file_get_contents($this->projectDir . 'assets/webpack-stats.json');
    $data = json_decode($file);

    return $data;
  }

  /**
   * check webpack status error
   *
   * @return void
   */
  private function checkStatus() {
    if ( $this->status === 'error' ) {
      throw new Exception("Something went wrong!");
    }
  }


  /**
   * get bundle with extension and name
   *
   * @return string
   */
  public function getBundle(string $extension, string $entry = "main") {
    $chunks = $this->chunks->$entry;

    $pattern = "/.$extension$/";

    foreach ( $chunks as &$chunk ) {
      $match = preg_match($pattern, $chunk);

      if ( $match ) {
        return $this->publicPath . $chunk;
      }
    }

    throw new Exception('File not found!');
  }
}

?>
